version: "3"

services:
  app:
    container_name: app
    restart: always
    build: ./
    env_file: .env
    expose:
      - 8080
    depends_on:
      - database
      #          condition: service_healthy
      - redis
    networks:
      - app-network

  database:
    image: mongo:4.4.2-bionic
    container_name: database
    restart: always
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - musings_data:/data/db
    networks:
      - app-network
    ports:
      - "27017:27017"
    expose:
      - 27017

  redis:
    image: redis:6.0.6-alpine
    container_name: redis
    restart: on-failure
    networks:
      - app-network

#  nginx:
#    container_name: nginx
#    build: ./nginx
#    restart: on-failure
#    env_file: .env
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /etc/ssl:/etc/ssl
#      - /var/run/docker.sock:/tmp/docker.sock
#    depends_on:
#      - app
#    networks:
#      - app-network
#    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

networks:
  app-network:
    driver: bridge

volumes:
  musings_data:
    external: true
